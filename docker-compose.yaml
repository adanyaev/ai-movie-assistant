
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["python", "-m", "app.main"]
    env_file:
      - .env
    environment:
      - DB_URI=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - ASYNC_DB_URI=postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - DROP_DB=${DROP_DB}
      - INDEX_DB_HOST=index_db
      - INDEX_DB_PORT=8000
    depends_on:
      - db
      - index_db

  db:
    image: postgres
    #restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME?Variable not set}
      - POSTGRES_USER=${DB_USER?Variable not set}
      - POSTGRES_PASSWORD=${DB_PASSWORD?Variable not set}
      - PGDATA=/var/lib/postgresql/data/pgdata
     
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_CONSOLE_LOG_LEVEL=50
      - GUNICORN_ACCESS_LOGFILE=/dev/null
    ports:
      - "5050:80"
    depends_on:
      - db

  index_db:
    image: chromadb/chroma:0.6.3
    command: ["--reload", "--workers 1", "--host 0.0.0.0", "--port 8000"]
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
    volumes:
      - index-db-data:/chroma

volumes:
  app-db-data:
  index-db-data:
